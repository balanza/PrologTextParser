:- use_module(library(tokenizer)).
:- use_module(library(textFile)).
:- use_module(library(textifier)).


/* main */
solve(SourceFile, ParsedFile):-
	/* legge l'intero testo dal file */
	readText(SourceFile, Text),
	/* trasforma il testo in una lista di tokens t(Index, Word) */
	tokenize(Text, Tokens),
	/* trasforma la lista di token semplici Tokens in una lista di token ai quali Ã¨ assegnata una classe */
	parse(Tokens, Parsed),
	/* riscrive la lista parsata in notazione pseudo-xml */
	textify(Parsed, ParsedText),
	
	/* scrive il testo parsato nel file */
	writeText(ParsedFile, ParsedText).



parse(Tokens, Parsed):-
	true. /* parser(Tokens, Parsed). */
	


	
	
/* 
* separator(Char) 
*   vero se Char fa parte della lista dei caratteri separatori
*/
separator(C):-
	member(C, [" ", "\t", "\n", ".", ",", ";", ":", "(", ")", "!", "?"]).

/* 
* ignore(Char) 
*   vero se Char fa parte della lista dei caratteri da ignorare
*/
ignore(C):-
	member(C, [" ", "\t", "\n", ",", ";", ":", "(", ")", "!", "?"]).



	
 	
